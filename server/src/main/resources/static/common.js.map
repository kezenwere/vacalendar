{"version":3,"sources":["webpack:///./src/app/auth/service/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACoD;AACoB;AAErD;AAC0B;AAClC;AAIpD;IAAiC,qEAAyC;IAExE,qBAAY,IAAgB,EAChB,cAA8B,EAC9B,eAAgC,EAChC,mBAAwC;eAClD,kBAAM,SAAS,EAAE,mCAAmC,EAAE,IAAI,EAAE,cAAc,EAAE,eAAe,EAAE,mBAAmB,CAAC;IACnH,CAAC;IAEM,2BAAK,GAAZ,UAAa,OAAe;QAC1B,OAAO,iBAAM,IAAI,YAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAEM,iCAAW,GAAlB;QACE,OAAO,iBAAM,GAAG,YAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAEM,kCAAY,GAAnB,UAAoB,QAAgB;QAClC,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC1D,OAAO,iBAAM,GAAG,YAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IApBU,WAAW;QADvB,gEAAU,EAAE;+EAGO,+DAAU;YACA,gGAAc;YACb,kEAAe;YACX,uGAAmB;OALzC,WAAW,CAqBvB;IAAD,kBAAC;CAAA,CArBgC,2HAAyB,GAqBzD;AArBuB","file":"common.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {AppConstantsService} from '../../shared/service/app-constants/app-constants.service';\r\nimport {AbstractHttpClientService} from '../../shared/service/abstract-http-client/abstract-http-client.service';\r\nimport {ServerResponse} from '../../shared/service/abstract-http-client/server-response';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {AppWideService} from '../../shared/service/app-wide-service/app-wide.service';\r\nimport {AuthUtilService} from './auth-util.service';\r\nimport {Observable, ReplaySubject} from 'rxjs/index';\r\n\r\n@Injectable()\r\nexport class AuthService extends AbstractHttpClientService<ServerResponse> {\r\n\r\n  constructor(http: HttpClient,\r\n              appWideService: AppWideService,\r\n              authUtilService: AuthUtilService,\r\n              appConstantsService: AppConstantsService) {\r\n    super('v1/auth', 'application/x-www-form-urlencoded', http, appWideService, authUtilService, appConstantsService);\r\n  }\r\n\r\n  public login(payload: Object): Observable<ServerResponse> {\r\n    return super.post(payload, 'login');\r\n  }\r\n\r\n  public authRequest(): Observable<ServerResponse> {\r\n    return super.get('google');\r\n  }\r\n\r\n  public authCode2Jwt(authCode: string): Observable<ServerResponse> {\r\n    const params = new HttpParams().set('authCode', authCode);\r\n    return super.get('auth-code', params);\r\n  }\r\n}\r\n"],"sourceRoot":""}